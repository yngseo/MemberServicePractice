<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.memberservicepractice.member.repository.MemberRepository">

    <resultMap type="com.example.memberservicepractice.member.dto.LevelDto" id="LevelDto">
        <id column="seq" property="seq" />
        <result column="level_name" property="levelName" />
    </resultMap>

    <resultMap type="com.example.memberservicepractice.member.dto.MemberDto" id="MemberDto">
        <id column="seq" property="seq"/>
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="level_seq" property="levelSeq"/>
        <result column="applicant" property="applicant"/>
        <result column="start_date" property="startDate"/>
        <result column="modify_date" property="modifyDate"/>
        <result column="approval_date" property="approvalDate"/>
        <result column="account_state" property="accountState"/>
        <result column="password_state" property="passwordState"/>
        <result column="phone" property="phone"/>
        <result column="remark" property="remark"/>
        <result column="ceo" property="ceo"/>
        <result column="client" property="client"/>
        <result column="department" property="department"/>
        <result column="job_grade" property="jobGrade"/>
        <result column="user_role" property="userRole"/>
        <collection property="levelDto" resultMap="LevelDto"/>
    </resultMap>

    <sql id="search">
        <if test="type != null and keyword != null">
            <trim prefix="(" suffix=") " prefixOverrides="OR">
                <foreach item="type" collection="typeArr">
                    <trim prefix="OR">
                        <choose>
                            <when test="type =='I'.toString()">
                                ID LIKE '%' || #{keyword} || '%'
                            </when>
                            <when test="type =='N'.toString()">
                                NAME LIKE '%' || #{keyword} || '%'
                            </when>
                            <when test="type =='C'.toString()">
                                CLIENT LIKE '%' || #{keyword} || '%'
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </trim>
        </if>
    </sql>

    <select id="getTotal" resultType="int">
        SELECT COUNT(*)
        FROM MEMBER
        <where>
            <include refid="search"></include>
        </where>
    </select>

    <select id="getListByAdmin" resultMap="MemberDto">
        SELECT M.*, L.LEVEL_NAME
        FROM (
            SELECT /*+ INDEX_DESC(MEMBER MEMBER_PK) */
            ROWNUM R, SEQ, ID, PASSWORD, NAME, EMAIL, LEVEL_SEQ, APPLICANT, START_DATE, MODIFY_DATE, APPROVAL_DATE, ACCOUNT_STATE, PASSWORD_STATE, PHONE, REMARK, CEO, CLIENT, DEPARTMENT, JOB_GRADE, USER_ROLE
            FROM MEMBER
            <where>
                <include refid="search"></include>
                <![CDATA[     AND ROWNUM <= #{pageNum} * #{amount} ]]>
            </where>
        ) M
        JOIN MEMBER_LEVEL L ON M.LEVEL_SEQ = L.SEQ
        WHERE R > (#{pageNum}-1) * #{amount}
        ORDER BY M.SEQ DESC
    </select>

    <select id="getListByClient" resultMap="MemberDto">
        SELECT M.SEQ, M.ID, M.NAME, M.EMAIL, L.LEVEL_NAME, M.CLIENT, M.APPROVAL_DATE FROM MEMBER M JOIN MEMBER_LEVEL L ON M.LEVEL_SEQ = L.SEQ
        WHERE M.LEVEL_SEQ = 4 AND CLIENT = #{name}
        ORDER BY M.SEQ DESC
    </select>

    <select id="getMemberById" resultType="com.example.memberservicepractice.member.dto.MemberDto">
        SELECT SEQ, ID, NAME, PASSWORD, EMAIL, LEVEL_SEQ, APPLICANT, START_DATE, MODIFY_DATE, APPROVAL_DATE, ACCOUNT_STATE, PASSWORD_STATE, PHONE, REMARK, CEO, CLIENT, DEPARTMENT, JOB_GRADE, USER_ROLE FROM MEMBER WHERE ID=#{id}
    </select>

    <update id="updateMemberAccountState">
        UPDATE MEMBER SET APPROVAL_DATE = SYSDATE WHERE ID = #{id}
    </update>

    <update id="updateMemberPasswordState">
        UPDATE MEMBER SET PASSWORD = #{password}, PASSWORD_STATE = 'I' WHERE ID = #{id}
    </update>

    <update id="updatePassword">
        UPDATE MEMBER SET PASSWORD = #{password}, PASSWORD_STATE = 'U' WHERE ID = #{id}
    </update>

    <select id="checkId" resultType="int">
        SELECT COUNT(id) FROM MEMBER WHERE ID=#{id}
    </select>

    <insert id="insertMember" parameterType="com.example.memberservicepractice.member.dto.MemberDto">
        <selectKey keyProperty="seq" resultType="int" order="BEFORE">
            SELECT MEMBER_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO MEMBER VALUES (#{seq}, #{id}, #{password}, #{name}, #{email}, #{levelSeq}, #{applicant}, SYSDATE, null, null, 'A', 'I', #{phone}, #{remark}, #{ceo}, #{client}, #{department}, #{jobGrade}, #{userRole})
    </insert>

    <select id="getClientList" resultType="String">
        SELECT NAME FROM MEMBER WHERE LEVEL_SEQ = 3
    </select>
</mapper>